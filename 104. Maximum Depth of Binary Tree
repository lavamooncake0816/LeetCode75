Binary Tree - DFS (Easy)

Given the root of a binary tree, return its maximum depth.

A binary tree's maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.

<8.16 1st attempt>
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxDepth(self, root: Optional[TreeNode]) -> int:
        if root == None:
            return 0
        maxDepthLeft = self.maxDepth(root.left)
        maxDepthRight = self.maxDepth(root.right)
        return max(maxDepthLeft, maxDepthRight) + 1 

Notes
1. 'TreeNode' object is not iterable, use recursion instead 2. the idea of recursion is important (first to the bottom, then back one level at a time)

<9.17 2nd attempt>
failed
