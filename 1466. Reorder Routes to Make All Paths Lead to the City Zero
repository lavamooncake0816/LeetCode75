Graphs - DFS (Medium)

There are n cities numbered from 0 to n - 1 and n - 1 roads such that there is only one way to travel between two different cities (this network form a tree). Last year, The ministry of transport decided to orient the roads in one direction because they are too narrow.

Roads are represented by connections where connections[i] = [ai, bi] represents a road from city ai to city bi.

This year, there will be a big event in the capital (city 0), and many people want to travel to this city.

Your task consists of reorienting some roads such that each city can visit the city 0. Return the minimum number of edges changed.

It's guaranteed that each city can reach city 0 after reorder.

<8.28 1st attempt>
class Solution:
    # start at city 0
    # recursively check its neighbours
    # count outgoing edges

    def minReorder(self, n: int, connections: List[List[int]]) -> int:
        edges = {(a, b) for a, b in connections} # adds each connection to the hashset (a: neighbour, b: city)
        neighbours =  {city:[] for city in range(n)} # neighbours of each city
        visit = set()
        changes = 0

        for a, b in connections:
            neighbours[a].append(b)
            neighbours[b].append(a)

        def dfs(city):
            nonlocal edges, neighbours, visit, changes # variables inside nested functions
            
            for neighbour in neighbours[city]: # traverses neighbours of each city
                if neighbour in visit:
                    continue
                # check if this neighbour can reach city 0
                if (neighbour, city) not in edges:
                    changes += 1
                visit.add(neighbour) # each node is visited only once
                dfs(neighbour) # traverses each node -> when visiting the node, traverses its neighbours
        
        visit.add(0)
        dfs(0)
        return changes

Notes
1. idea matters (traverse each node, whilst visiting a node, traverse its neighbours) 2. 'if... return' -> 'else' can be omitted 

<9.29 2nd attempt>
failed
