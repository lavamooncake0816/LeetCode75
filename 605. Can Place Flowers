Array / String (Easy)

Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

You can return the answer in any order.

<7.25 1st attempt>
class Solution:
    def canPlaceFlowers(self, flowerbed: List[int], n: int) -> bool:
        if n == 0:
            return True

        for i in range(len(flowerbed)):
            if flowerbed[i] == 0 and (i == 0 or flowerbed[i-1] == 0) and (i == len(flowerbed) - 1 or flowerbed[i+1] == 0):
                flowerbed[i] = 1
                n -= 1 
                if n == 0:
                    return True
        else:
            return False 

Notes
1. the idea is important 2. pay attention to what's inside the loop

<9.4 2nd attempt>
class Solution:
    def canPlaceFlowers(self, flowerbed: List[int], n: int) -> bool:
        for i in range(len(flowerbed)):
            if n == 0:
                return True

            if len(flowerbed) == 1:
                if flowerbed[0] == 0:
                    return True
                return False

            if flowerbed[0] == 0 and flowerbed[1] == 0:
                n -= 1
                flowerbed[0] = 1
            if flowerbed[-1] == 0 and flowerbed[-2] == 0:
                n -= 1
                flowerbed[-1] = 1
            if flowerbed[i-1] == 0 and flowerbed[i] == 0 and flowerbed[i+1] == 0:
                n -= 1
                flowerbed[i] = 1
        
        if n <= 0:
            return True
        return False
